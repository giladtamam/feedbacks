{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst pim_json_1 = __importDefault(require(\"../../fixtures/regexes/client/pim.json\"));\n\nconst version_1 = require(\"../../utils/version\");\n\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\n\nconst user_agent_1 = require(\"../../utils/user-agent\");\n\nclass PersonalInformationManagerParser {\n  constructor(options) {\n    this.options = {\n      versionTruncation: 1\n    };\n\n    this.parse = userAgent => {\n      const result = {\n        type: \"\",\n        name: \"\",\n        version: \"\"\n      };\n\n      for (const personalInformationManager of pim_json_1.default) {\n        const match = user_agent_1.userAgentParser(personalInformationManager.regex, userAgent);\n        if (!match) continue;\n        result.type = \"personal information manager\";\n        result.name = variable_replacement_1.variableReplacement(personalInformationManager.name, match);\n        result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(personalInformationManager.version, match), this.options.versionTruncation);\n        break;\n      }\n\n      return result;\n    };\n\n    this.options = Object.assign(Object.assign({}, this.options), options);\n  }\n\n}\n\nexports.default = PersonalInformationManagerParser;","map":{"version":3,"sources":["/Users/gilad.tamam/dev/Workspace/feedbacks/node_modules/device-detector-js/dist/parsers/client/personal-information-managers.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","pim_json_1","require","version_1","variable_replacement_1","user_agent_1","PersonalInformationManagerParser","constructor","options","versionTruncation","parse","userAgent","result","type","name","version","personalInformationManager","default","match","userAgentParser","regex","variableReplacement","formatVersion","assign"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,UAAU,GAAGP,eAAe,CAACQ,OAAO,CAAC,wCAAD,CAAR,CAAlC;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAME,sBAAsB,GAAGF,OAAO,CAAC,kCAAD,CAAtC;;AACA,MAAMG,YAAY,GAAGH,OAAO,CAAC,wBAAD,CAA5B;;AACA,MAAMI,gCAAN,CAAuC;AACnCC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAKA,OAAL,GAAe;AACXC,MAAAA,iBAAiB,EAAE;AADR,KAAf;;AAGA,SAAKC,KAAL,GAAcC,SAAD,IAAe;AACxB,YAAMC,MAAM,GAAG;AACXC,QAAAA,IAAI,EAAE,EADK;AAEXC,QAAAA,IAAI,EAAE,EAFK;AAGXC,QAAAA,OAAO,EAAE;AAHE,OAAf;;AAKA,WAAK,MAAMC,0BAAX,IAAyCf,UAAU,CAACgB,OAApD,EAA6D;AACzD,cAAMC,KAAK,GAAGb,YAAY,CAACc,eAAb,CAA6BH,0BAA0B,CAACI,KAAxD,EAA+DT,SAA/D,CAAd;AACA,YAAI,CAACO,KAAL,EACI;AACJN,QAAAA,MAAM,CAACC,IAAP,GAAc,8BAAd;AACAD,QAAAA,MAAM,CAACE,IAAP,GAAcV,sBAAsB,CAACiB,mBAAvB,CAA2CL,0BAA0B,CAACF,IAAtE,EAA4EI,KAA5E,CAAd;AACAN,QAAAA,MAAM,CAACG,OAAP,GAAiBZ,SAAS,CAACmB,aAAV,CAAwBlB,sBAAsB,CAACiB,mBAAvB,CAA2CL,0BAA0B,CAACD,OAAtE,EAA+EG,KAA/E,CAAxB,EAA+G,KAAKV,OAAL,CAAaC,iBAA5H,CAAjB;AACA;AACH;;AACD,aAAOG,MAAP;AACH,KAhBD;;AAiBA,SAAKJ,OAAL,GAAeX,MAAM,CAAC0B,MAAP,CAAc1B,MAAM,CAAC0B,MAAP,CAAc,EAAd,EAAkB,KAAKf,OAAvB,CAAd,EAA+CA,OAA/C,CAAf;AACH;;AAvBkC;;AAyBvCT,OAAO,CAACkB,OAAR,GAAkBX,gCAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst pim_json_1 = __importDefault(require(\"../../fixtures/regexes/client/pim.json\"));\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass PersonalInformationManagerParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\"\n            };\n            for (const personalInformationManager of pim_json_1.default) {\n                const match = user_agent_1.userAgentParser(personalInformationManager.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"personal information manager\";\n                result.name = variable_replacement_1.variableReplacement(personalInformationManager.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(personalInformationManager.version, match), this.options.versionTruncation);\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = PersonalInformationManagerParser;\n"]},"metadata":{},"sourceType":"script"}