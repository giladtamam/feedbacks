{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst libraries_json_1 = __importDefault(require(\"../../fixtures/regexes/client/libraries.json\"));\n\nconst version_1 = require(\"../../utils/version\");\n\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\n\nconst user_agent_1 = require(\"../../utils/user-agent\");\n\nclass LibraryParser {\n  constructor(options) {\n    this.options = {\n      versionTruncation: 1\n    };\n\n    this.parse = userAgent => {\n      const result = {\n        type: \"\",\n        name: \"\",\n        version: \"\",\n        url: \"\"\n      };\n\n      for (const library of libraries_json_1.default) {\n        const match = user_agent_1.userAgentParser(library.regex, userAgent);\n        if (!match) continue;\n        result.type = \"library\";\n        result.name = variable_replacement_1.variableReplacement(library.name, match);\n        result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(library.version, match), this.options.versionTruncation);\n        result.url = library.url || \"\";\n        break;\n      }\n\n      return result;\n    };\n\n    this.options = Object.assign(Object.assign({}, this.options), options);\n  }\n\n}\n\nexports.default = LibraryParser;","map":{"version":3,"sources":["/Users/gilad.tamam/dev/Workspace/feedbacks/node_modules/device-detector-js/dist/parsers/client/libraries.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","libraries_json_1","require","version_1","variable_replacement_1","user_agent_1","LibraryParser","constructor","options","versionTruncation","parse","userAgent","result","type","name","version","url","library","default","match","userAgentParser","regex","variableReplacement","formatVersion","assign"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,gBAAgB,GAAGP,eAAe,CAACQ,OAAO,CAAC,8CAAD,CAAR,CAAxC;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAzB;;AACA,MAAME,sBAAsB,GAAGF,OAAO,CAAC,kCAAD,CAAtC;;AACA,MAAMG,YAAY,GAAGH,OAAO,CAAC,wBAAD,CAA5B;;AACA,MAAMI,aAAN,CAAoB;AAChBC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACjB,SAAKA,OAAL,GAAe;AACXC,MAAAA,iBAAiB,EAAE;AADR,KAAf;;AAGA,SAAKC,KAAL,GAAcC,SAAD,IAAe;AACxB,YAAMC,MAAM,GAAG;AACXC,QAAAA,IAAI,EAAE,EADK;AAEXC,QAAAA,IAAI,EAAE,EAFK;AAGXC,QAAAA,OAAO,EAAE,EAHE;AAIXC,QAAAA,GAAG,EAAE;AAJM,OAAf;;AAMA,WAAK,MAAMC,OAAX,IAAsBhB,gBAAgB,CAACiB,OAAvC,EAAgD;AAC5C,cAAMC,KAAK,GAAGd,YAAY,CAACe,eAAb,CAA6BH,OAAO,CAACI,KAArC,EAA4CV,SAA5C,CAAd;AACA,YAAI,CAACQ,KAAL,EACI;AACJP,QAAAA,MAAM,CAACC,IAAP,GAAc,SAAd;AACAD,QAAAA,MAAM,CAACE,IAAP,GAAcV,sBAAsB,CAACkB,mBAAvB,CAA2CL,OAAO,CAACH,IAAnD,EAAyDK,KAAzD,CAAd;AACAP,QAAAA,MAAM,CAACG,OAAP,GAAiBZ,SAAS,CAACoB,aAAV,CAAwBnB,sBAAsB,CAACkB,mBAAvB,CAA2CL,OAAO,CAACF,OAAnD,EAA4DI,KAA5D,CAAxB,EAA4F,KAAKX,OAAL,CAAaC,iBAAzG,CAAjB;AACAG,QAAAA,MAAM,CAACI,GAAP,GAAaC,OAAO,CAACD,GAAR,IAAe,EAA5B;AACA;AACH;;AACD,aAAOJ,MAAP;AACH,KAlBD;;AAmBA,SAAKJ,OAAL,GAAeX,MAAM,CAAC2B,MAAP,CAAc3B,MAAM,CAAC2B,MAAP,CAAc,EAAd,EAAkB,KAAKhB,OAAvB,CAAd,EAA+CA,OAA/C,CAAf;AACH;;AAzBe;;AA2BpBT,OAAO,CAACmB,OAAR,GAAkBZ,aAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst libraries_json_1 = __importDefault(require(\"../../fixtures/regexes/client/libraries.json\"));\nconst version_1 = require(\"../../utils/version\");\nconst variable_replacement_1 = require(\"../../utils/variable-replacement\");\nconst user_agent_1 = require(\"../../utils/user-agent\");\nclass LibraryParser {\n    constructor(options) {\n        this.options = {\n            versionTruncation: 1\n        };\n        this.parse = (userAgent) => {\n            const result = {\n                type: \"\",\n                name: \"\",\n                version: \"\",\n                url: \"\"\n            };\n            for (const library of libraries_json_1.default) {\n                const match = user_agent_1.userAgentParser(library.regex, userAgent);\n                if (!match)\n                    continue;\n                result.type = \"library\";\n                result.name = variable_replacement_1.variableReplacement(library.name, match);\n                result.version = version_1.formatVersion(variable_replacement_1.variableReplacement(library.version, match), this.options.versionTruncation);\n                result.url = library.url || \"\";\n                break;\n            }\n            return result;\n        };\n        this.options = Object.assign(Object.assign({}, this.options), options);\n    }\n}\nexports.default = LibraryParser;\n"]},"metadata":{},"sourceType":"script"}