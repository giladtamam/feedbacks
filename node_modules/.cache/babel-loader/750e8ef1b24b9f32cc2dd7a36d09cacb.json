{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.trim = (str, char) => {\n  return str.replace(new RegExp(\"^[\" + char + \"]+|[\" + char + \"]+$\", \"g\"), \"\");\n};","map":{"version":3,"sources":["/Users/gilad.tamam/dev/Workspace/feedbacks/node_modules/device-detector-js/dist/utils/trim.js"],"names":["Object","defineProperty","exports","value","trim","str","char","replace","RegExp"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACAD,OAAO,CAACE,IAAR,GAAe,CAACC,GAAD,EAAMC,IAAN,KAAe;AAC1B,SAAOD,GAAG,CAACE,OAAJ,CAAY,IAAIC,MAAJ,CAAW,OAAOF,IAAP,GAAc,MAAd,GAAuBA,IAAvB,GAA8B,KAAzC,EAAgD,GAAhD,CAAZ,EAAkE,EAAlE,CAAP;AACH,CAFD","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.trim = (str, char) => {\n    return str.replace(new RegExp(\"^[\" + char + \"]+|[\" + char + \"]+$\", \"g\"), \"\");\n};\n"]},"metadata":{},"sourceType":"script"}