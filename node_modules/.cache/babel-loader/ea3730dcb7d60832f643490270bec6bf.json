{"ast":null,"code":"var _jsxFileName = \"/Users/gilad.tamam/dev/Workspace/feedbacks/src/components/RatingButton.tsx\",\n    _s = $RefreshSig$();\n\nimport { Button, styled } from \"@mui/material\";\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledButton = styled(Button)`\n    margin-left: 10px;\n    min-Width: 10px;\n    border-radius: 50%;\n    align-self: center;\n`;\n_c = StyledButton;\n;\n\nfunction RatingButton(props) {\n  _s();\n\n  const {\n    onButtonClick,\n    isSelected,\n    rating\n  } = props;\n  const buttonClicked = useCallback(() => {\n    if (onButtonClick) {\n      onButtonClick(rating);\n    }\n  }, [onButtonClick, rating]);\n  const variant = isSelected ? 'contained' : 'outlined';\n  return /*#__PURE__*/_jsxDEV(StyledButton, {\n    \"data-testid\": onButtonClick ? `rating-button-${rating}` : '',\n    onClick: buttonClicked,\n    variant: variant,\n    children: rating\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(RatingButton, \"lP+dcxeVUBZkLh3GoiOE5JYr5ls=\");\n\n_c2 = RatingButton;\nexport default RatingButton;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StyledButton\");\n$RefreshReg$(_c2, \"RatingButton\");","map":{"version":3,"sources":["/Users/gilad.tamam/dev/Workspace/feedbacks/src/components/RatingButton.tsx"],"names":["Button","styled","useCallback","StyledButton","RatingButton","props","onButtonClick","isSelected","rating","buttonClicked","variant"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,eAA/B;AACA,SAASC,WAAT,QAA4B,OAA5B;;AAEA,MAAMC,YAAY,GAAGF,MAAM,CAACD,MAAD,CAAS;AACpC;AACA;AACA;AACA;AACA,CALA;KAAMG,Y;AAUL;;AAED,SAASC,YAAT,CAAuBC,KAAvB,EAAkD;AAAA;;AAC9C,QAAM;AAAEC,IAAAA,aAAF;AAAiBC,IAAAA,UAAjB;AAA6BC,IAAAA;AAA7B,MAAwCH,KAA9C;AAEA,QAAMI,aAAa,GAAGP,WAAW,CAAC,MAAM;AACpC,QAAII,aAAJ,EAAmB;AACfA,MAAAA,aAAa,CAACE,MAAD,CAAb;AACH;AACJ,GAJgC,EAI9B,CAACF,aAAD,EAAgBE,MAAhB,CAJ8B,CAAjC;AAMA,QAAME,OAAO,GAAGH,UAAU,GAAG,WAAH,GAAiB,UAA3C;AAEA,sBACI,QAAC,YAAD;AACI,mBAAaD,aAAa,GAAI,iBAAgBE,MAAO,EAA3B,GAA+B,EAD7D;AAEI,IAAA,OAAO,EAAEC,aAFb;AAGI,IAAA,OAAO,EAAEC,OAHb;AAAA,cAIUF;AAJV;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAnBQJ,Y;;MAAAA,Y;AAqBT,eAAeA,YAAf","sourcesContent":["import { Button, styled } from \"@mui/material\";\nimport { useCallback } from \"react\";\n\nconst StyledButton = styled(Button)`\n    margin-left: 10px;\n    min-Width: 10px;\n    border-radius: 50%;\n    align-self: center;\n`;\ninterface IRatingButtonProps {\n    onButtonClick?: (str: string) => void;\n    isSelected: boolean;\n    rating: string\n};\n\nfunction RatingButton (props: IRatingButtonProps) {\n    const { onButtonClick, isSelected, rating } = props;\n\n    const buttonClicked = useCallback(() => {\n        if (onButtonClick) {\n            onButtonClick(rating);\n        }\n    }, [onButtonClick, rating]);\n\n    const variant = isSelected ? 'contained' : 'outlined';\n\n    return (\n        <StyledButton\n            data-testid={onButtonClick ? `rating-button-${rating}` : ''}\n            onClick={buttonClicked}\n            variant={variant}>\n                { rating }\n        </StyledButton>\n    );\n}\n\nexport default RatingButton;"]},"metadata":{},"sourceType":"module"}