{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nexport const useFilterFeedbacks = feedbacks => {\n  _s();\n\n  const [filteredFeedbacks, setFilteredFeedbacks] = useState(feedbacks);\n  const [ratingButtons, setRatingButtons] = useState({\n    '1': true,\n    '2': true,\n    '3': true,\n    '4': true,\n    '5': true\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n  const onRatingChange = useCallback(rating => {\n    const selectedRatings = { ...ratingButtons,\n      [rating]: !ratingButtons[rating]\n    };\n    setRatingButtons(selectedRatings);\n  }, [ratingButtons]);\n  const onSearchChange = useCallback(event => {\n    const {\n      value\n    } = event.target;\n    setSearchTerm(value);\n  }, []);\n  useEffect(() => {\n    setFilteredFeedbacks(feedbacks.filter(fb => {\n      return ratingButtons[fb.rating] && (searchTerm ? fb.comment.toLowerCase().includes(searchTerm.toLowerCase()) : true);\n    }));\n  }, [feedbacks, ratingButtons, searchTerm]);\n  return {\n    filteredFeedbacks,\n    searchTerm,\n    ratingButtons,\n    onRatingChange,\n    onSearchChange\n  };\n};\n\n_s(useFilterFeedbacks, \"tlAMFx1LL2bW0/3fDbn7pS2QB+8=\");","map":{"version":3,"sources":["/Users/gilad.tamam/dev/Workspace/feedbacks/src/hooks/use-filter.ts"],"names":["useCallback","useEffect","useState","useFilterFeedbacks","feedbacks","filteredFeedbacks","setFilteredFeedbacks","ratingButtons","setRatingButtons","searchTerm","setSearchTerm","onRatingChange","rating","selectedRatings","onSearchChange","event","value","target","filter","fb","comment","toLowerCase","includes"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAGA,OAAO,MAAMC,kBAAkB,GAAIC,SAAD,IAA4B;AAAA;;AAC1D,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CJ,QAAQ,CAAcE,SAAd,CAA1D;AACA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAA6B;AAC3E,SAAK,IADsE;AAE3E,SAAK,IAFsE;AAG3E,SAAK,IAHsE;AAI3E,SAAK,IAJsE;AAK3E,SAAK;AALsE,GAA7B,CAAlD;AAOA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMS,cAAc,GAAGX,WAAW,CAAEY,MAAD,IAAoB;AACrD,UAAMC,eAAe,GAAG,EAAC,GAAGN,aAAJ;AAAmB,OAACK,MAAD,GAAU,CAACL,aAAa,CAACK,MAAD;AAA3C,KAAxB;AACAJ,IAAAA,gBAAgB,CAACK,eAAD,CAAhB;AACD,GAHiC,EAG/B,CAACN,aAAD,CAH+B,CAAlC;AAKA,QAAMO,cAAc,GAAGd,WAAW,CAAEe,KAAD,IAAW;AAC5C,UAAM;AAAEC,MAAAA;AAAF,QAAYD,KAAK,CAACE,MAAxB;AACAP,IAAAA,aAAa,CAACM,KAAD,CAAb;AACD,GAHiC,EAG/B,EAH+B,CAAlC;AAKAf,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,oBAAoB,CAACF,SAAS,CAACc,MAAV,CAAiBC,EAAE,IAAI;AAC1C,aAAOZ,aAAa,CAACY,EAAE,CAACP,MAAJ,CAAb,KACJH,UAAU,GAAGU,EAAE,CAACC,OAAH,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCb,UAAU,CAACY,WAAX,EAAlC,CAAH,GAAiE,IADvE,CAAP;AAED,KAHoB,CAAD,CAApB;AAID,GALQ,EAKN,CAACjB,SAAD,EAAYG,aAAZ,EAA2BE,UAA3B,CALM,CAAT;AAMA,SAAO;AAAEJ,IAAAA,iBAAF;AAAqBI,IAAAA,UAArB;AAAiCF,IAAAA,aAAjC;AAAgDI,IAAAA,cAAhD;AAAgEG,IAAAA;AAAhE,GAAP;AACD,CA5BI;;GAAMX,kB","sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\nimport { IFeedback } from \"../api/api\";\n\nexport const useFilterFeedbacks = (feedbacks: IFeedback[]) => {\n    const [filteredFeedbacks, setFilteredFeedbacks] = useState<IFeedback[]>(feedbacks);\n    const [ratingButtons, setRatingButtons] = useState<{ [key: string]: boolean }>({\n        '1': true,\n        '2': true,\n        '3': true,\n        '4': true,\n        '5': true\n    });\n    const [searchTerm, setSearchTerm] = useState('');\n  \n    const onRatingChange = useCallback((rating: string) => {\n      const selectedRatings = {...ratingButtons, [rating]: !ratingButtons[rating] };\n      setRatingButtons(selectedRatings);\n    }, [ratingButtons]);\n  \n    const onSearchChange = useCallback((event) => {\n      const { value } = event.target;\n      setSearchTerm(value);\n    }, []);\n  \n    useEffect(() => {\n      setFilteredFeedbacks(feedbacks.filter(fb => {\n        return ratingButtons[fb.rating] &&\n          (searchTerm ? fb.comment.toLowerCase().includes(searchTerm.toLowerCase()) : true);\n      }));\n    }, [feedbacks, ratingButtons, searchTerm]);\n    return { filteredFeedbacks, searchTerm, ratingButtons, onRatingChange, onSearchChange };\n  }"]},"metadata":{},"sourceType":"module"}