{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst cameras_1 = __importDefault(require(\"./cameras\"));\n\nconst mobiles_1 = __importDefault(require(\"./mobiles\"));\n\nconst televisions_1 = __importDefault(require(\"./televisions\"));\n\nconst cars_1 = __importDefault(require(\"./cars\"));\n\nconst consoles_1 = __importDefault(require(\"./consoles\"));\n\nconst notebooks_1 = __importDefault(require(\"./notebooks\"));\n\nconst portable_media_players_1 = __importDefault(require(\"./portable-media-players\"));\n\nconst deviceParsers = [consoles_1.default, cars_1.default, cameras_1.default, televisions_1.default, portable_media_players_1.default, mobiles_1.default, notebooks_1.default];\n\nclass ClientParser {\n  constructor() {\n    this.parse = userAgent => {\n      for (const Parser of deviceParsers) {\n        const parser = new Parser();\n        const device = parser.parse(userAgent);\n\n        if (device.type !== \"\") {\n          return device;\n        }\n      }\n\n      return null;\n    };\n  }\n\n}\n\nexports.default = ClientParser;","map":{"version":3,"sources":["/Users/gilad.tamam/dev/Workspace/feedbacks/node_modules/device-detector-js/dist/parsers/device/index.js"],"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","cameras_1","require","mobiles_1","televisions_1","cars_1","consoles_1","notebooks_1","portable_media_players_1","deviceParsers","default","ClientParser","constructor","parse","userAgent","Parser","parser","device","type"],"mappings":"AAAA;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,IAAkC,UAAUC,GAAV,EAAe;AACnE,SAAQA,GAAG,IAAIA,GAAG,CAACC,UAAZ,GAA0BD,GAA1B,GAAgC;AAAE,eAAWA;AAAb,GAAvC;AACH,CAFD;;AAGAE,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,SAAS,GAAGP,eAAe,CAACQ,OAAO,CAAC,WAAD,CAAR,CAAjC;;AACA,MAAMC,SAAS,GAAGT,eAAe,CAACQ,OAAO,CAAC,WAAD,CAAR,CAAjC;;AACA,MAAME,aAAa,GAAGV,eAAe,CAACQ,OAAO,CAAC,eAAD,CAAR,CAArC;;AACA,MAAMG,MAAM,GAAGX,eAAe,CAACQ,OAAO,CAAC,QAAD,CAAR,CAA9B;;AACA,MAAMI,UAAU,GAAGZ,eAAe,CAACQ,OAAO,CAAC,YAAD,CAAR,CAAlC;;AACA,MAAMK,WAAW,GAAGb,eAAe,CAACQ,OAAO,CAAC,aAAD,CAAR,CAAnC;;AACA,MAAMM,wBAAwB,GAAGd,eAAe,CAACQ,OAAO,CAAC,0BAAD,CAAR,CAAhD;;AACA,MAAMO,aAAa,GAAG,CAClBH,UAAU,CAACI,OADO,EAElBL,MAAM,CAACK,OAFW,EAGlBT,SAAS,CAACS,OAHQ,EAIlBN,aAAa,CAACM,OAJI,EAKlBF,wBAAwB,CAACE,OALP,EAMlBP,SAAS,CAACO,OANQ,EAOlBH,WAAW,CAACG,OAPM,CAAtB;;AASA,MAAMC,YAAN,CAAmB;AACfC,EAAAA,WAAW,GAAG;AACV,SAAKC,KAAL,GAAcC,SAAD,IAAe;AACxB,WAAK,MAAMC,MAAX,IAAqBN,aAArB,EAAoC;AAChC,cAAMO,MAAM,GAAG,IAAID,MAAJ,EAAf;AACA,cAAME,MAAM,GAAGD,MAAM,CAACH,KAAP,CAAaC,SAAb,CAAf;;AACA,YAAIG,MAAM,CAACC,IAAP,KAAgB,EAApB,EAAwB;AACpB,iBAAOD,MAAP;AACH;AACJ;;AACD,aAAO,IAAP;AACH,KATD;AAUH;;AAZc;;AAcnBlB,OAAO,CAACW,OAAR,GAAkBC,YAAlB","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cameras_1 = __importDefault(require(\"./cameras\"));\nconst mobiles_1 = __importDefault(require(\"./mobiles\"));\nconst televisions_1 = __importDefault(require(\"./televisions\"));\nconst cars_1 = __importDefault(require(\"./cars\"));\nconst consoles_1 = __importDefault(require(\"./consoles\"));\nconst notebooks_1 = __importDefault(require(\"./notebooks\"));\nconst portable_media_players_1 = __importDefault(require(\"./portable-media-players\"));\nconst deviceParsers = [\n    consoles_1.default,\n    cars_1.default,\n    cameras_1.default,\n    televisions_1.default,\n    portable_media_players_1.default,\n    mobiles_1.default,\n    notebooks_1.default\n];\nclass ClientParser {\n    constructor() {\n        this.parse = (userAgent) => {\n            for (const Parser of deviceParsers) {\n                const parser = new Parser();\n                const device = parser.parse(userAgent);\n                if (device.type !== \"\") {\n                    return device;\n                }\n            }\n            return null;\n        };\n    }\n}\nexports.default = ClientParser;\n"]},"metadata":{},"sourceType":"script"}